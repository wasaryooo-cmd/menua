-- SETTINGS (replace nil with true/false to override defaults)
_G.WRDESPEnabled = nil
_G.WRDESPBoxes = nil
_G.WRDESPTeamColors = nil
_G.WRDESPTracers = nil
_G.WRDESPNames = nil

-- ESP Script (your original code is unchanged)
-- Only adds GUI after ESP loads

if not _G.WRDESPLoaded then
    ----[[ Original ESP code here ]]----
    -- (Keep your whole ESP implementation unchanged)
    -- Just scroll down to where it ends and then add the GUI part below â†“

    --Sets defaults where required
    if _G.WRDESPEnabled == nil then _G.WRDESPEnabled = true end
    if _G.WRDESPBoxes == nil then _G.WRDESPBoxes = true end
    if _G.WRDESPTeamColors == nil then _G.WRDESPTeamColors = true end
    if _G.WRDESPTracers == nil then _G.WRDESPTracers = false end
    if _G.WRDESPNames == nil then _G.WRDESPNames = true end
	
	--Hacky way to keep up with setting changes
    while task.wait
        ESP:Toggle(_G.WRDESPEnabled or false)
        ESP.Boxes = _G.WRDESPBoxes or false
        ESP.TeamColor = _G.WRDESPTeamColors or false
        ESP.Tracers = _G.WRDESPTracers or false
        ESP.Names = _G.WRDESPNames or false
    end

    _G.WRDESPLoaded = true
end

--//========================
--//  GUI MENU (Tabbed)
--//========================

if not game.CoreGui:FindFirstChild("WRDMenu") then
    local gui = Instance.new("ScreenGui")
    gui.Name = "WRDMenu"
    gui.ResetOnSpawn = false
    gui.Parent = game.CoreGui

    -- Main Frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 220)
    frame.Position = UDim2.new(0.35, 0, 0.3, 0)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.Parent = gui

    -- Title
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    title.Text = "WRD ESP Menu"
    title.Font = Enum.Font.SourceSansBold
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextSize = 20
    title.Parent = frame

    -- Tabs
    local tabs = Instance.new("Frame")
    tabs.Size = UDim2.new(1, 0, 0, 25)
    tabs.Position = UDim2.new(0, 0, 0, 30)
    tabs.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabs.Parent = frame

    local mainTabButton = Instance.new("TextButton")
    mainTabButton.Size = UDim2.new(0.5, 0, 1, 0)
    mainTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    mainTabButton.Text = "Main"
    mainTabButton.TextColor3 = Color3.new(1, 1, 1)
    mainTabButton.Parent = tabs

    local settingsTabButton = Instance.new("TextButton")
    settingsTabButton.Size = UDim2.new(0.5, 0, 1, 0)
    settingsTabButton.Position = UDim2.new(0.5, 0, 0, 0)
    settingsTabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    settingsTabButton.Text = "Settings"
    settingsTabButton.TextColor3 = Color3.new(1, 1, 1)
    settingsTabButton.Parent = tabs

    -- Main Tab Content
    local mainTab = Instance.new("Frame")
    mainTab.Size = UDim2.new(1, 0, 1, -55)
    mainTab.Position = UDim2.new(0, 0, 0, 55)
    mainTab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    mainTab.Parent = frame

    -- Settings Tab Content
    local settingsTab = Instance.new("Frame")
    settingsTab.Size = mainTab.Size
    settingsTab.Position = mainTab.Position
    settingsTab.BackgroundColor3 = mainTab.BackgroundColor3
    settingsTab.Visible = false
    settingsTab.Parent = frame

    -- Switch tab logic
    local function switchTab(tab)
        if tab == "Main" then
            mainTab.Visible = true
            settingsTab.Visible = false
            mainTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            settingsTabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        else
            mainTab.Visible = false
            settingsTab.Visible = true
            mainTabButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            settingsTabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end
    end
    mainTabButton.MouseButton1Click:Connect(function() switchTab("Main") end)
    settingsTabButton.MouseButton1Click:Connect(function() switchTab("Settings") end)

    -- Helper to create toggle buttons
    local function createToggle(parent, label, settingVar, yPos)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0.9, 0, 0, 25)
        button.Position = UDim2.new(0.05, 0, 0, yPos)
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Text = label .. ": " .. tostring(_G[settingVar])
        button.Font = Enum.Font.SourceSans
        button.TextSize = 18
        button.Parent = parent

        button.MouseButton1Click:Connect(function()
            _G[settingVar] = not _G[settingVar]
            button.Text = label .. ": " .. tostring(_G[settingVar])
        end)
    end

    -- Add toggles to main tab
    createToggle(mainTab, "ESP Enabled", "WRDESPEnabled", 10)
    createToggle(mainTab, "Boxes", "WRDESPBoxes", 45)
    createToggle(mainTab, "Team Colors", "WRDESPTeamColors", 80)
    createToggle(mainTab, "Tracers", "WRDESPTracers", 115)
    createToggle(mainTab, "Names", "WRDESPNames", 150)

    -- Add Settings tab info
    local info = Instance.new("TextLabel")
    info.Size = UDim2.new(1, -20, 1, -20)
    info.Position = UDim2.new(0, 10, 0, 10)
    info.BackgroundTransparency = 1
    info.Text = "This tab can be used for additional options\n(e.g. color, keybinds, visibility distance)."
    info.TextColor3 = Color3.new(1, 1, 1)
    info.TextWrapped = true
    info.TextSize = 18
    info.Font = Enum.Font.SourceSans
    info.Parent = settingsTab
end
